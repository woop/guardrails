
Provide detailed information about the top 5 grossing movies from Christopher Nolan including release date, duration, budget, whether it's a sequel, website, and contact email.

Given below is XML that describes the information to extract from this document and the tags to extract it into.

<output>
    <object name="director" pydantic="Director">
        <string name="name" format="is-valid-director"/>
        <list name="movies">
            <object>
                <integer name="rank"/>
                <string name="title"/>
                <object name="details">
                    <date name="release_date"/>
                    <time name="duration"/>
                    <float name="budget"/>
                    <bool name="is_sequel"/>
                    <string name="website" format="length: min=9 max=100"/>
                    <string name="contact_email"/>
                    <string name="revenue_type" choices="box_office,streaming"/>
                    <object name="box_office" description="box_office" if="revenue_type==box_office">
                        <float name="gross"/>
                        <float name="opening_weekend"/>
                    </object>
                    <object name="streaming" description="streaming" if="revenue_type==streaming">
                        <integer name="subscriptions"/>
                        <float name="subscription_fee"/>
                    </object>
                </object>
            </object>
        </list>
    </object>
</output>


ONLY return a valid JSON object (no other text is necessary), where the key of the field in JSON is the `name` attribute of the corresponding XML, and the value is of the type specified by the corresponding XML's tag. The JSON MUST conform to the XML format, including any types and format requests e.g. requests for lists, objects and specific types. Be correct and concise.

Here are examples of simple (XML, JSON) pairs that show the expected behavior:
- `<string name='foo' format='two-words lower-case' />` => `{'foo': 'example one'}`
- `<list name='bar'><string format='upper-case' /></list>` => `{"bar": ['STRING ONE', 'STRING TWO', etc.]}`
- `<object name='baz'><string name="foo" format="capitalize two-words" /><integer name="index" format="1-indexed" /></object>` => `{'baz': {'foo': 'Some String', 'index': 1}}`

